# Generated by Django 3.0.8 on 2020-07-22 16:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting', models.TextField(unique=True)),
                ('value', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Настройки',
                'verbose_name_plural': 'Настройки',
                'db_table': 'app_global_settings',
            },
        ),
        migrations.CreateModel(
            name='Revenue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('income', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Прибыль',
                'verbose_name_plural': 'Прибыль',
                'db_table': 'app_revenue',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tag', models.CharField(max_length=32, unique=True)),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
            },
        ),
        migrations.CreateModel(
            name='Records',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128)),
                ('content', models.TextField()),
                ('description', models.CharField(max_length=256)),
                ('main_pic', models.FileField(upload_to='record_src/')),
                ('pre_video', models.FileField(upload_to='record_src/')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('rating', models.FloatField(default=0.0)),
                ('best_rating', models.IntegerField(default=0)),
                ('rating_count', models.IntegerField(default=0)),
                ('worst_rating', models.IntegerField(default=10)),
                ('includes', models.TextField(blank=True, default=None, max_length=256, null=True)),
                ('price', models.IntegerField()),
                ('sales', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(to='app.Tags')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.FileField(default='/media/avatars/avatar-default.png', upload_to='')),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
                ('balance', models.IntegerField(default=0)),
                ('is_premium', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('has_2step_verification', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
                'db_table': 'app_profile',
            },
        ),
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=128)),
                ('_order', models.IntegerField(default=0)),
                ('record', models.ManyToManyField(to='app.Records')),
            ],
            options={
                'verbose_name': 'Заголовок',
                'verbose_name_plural': 'Заголовки',
                'db_table': 'app_headers',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('src', models.FileField(upload_to='record_src/')),
                ('_order', models.IntegerField(default=0)),
                ('header', models.ManyToManyField(to='app.Header')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
                'db_table': 'app_files',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Records')),
            ],
            options={
                'verbose_name': 'Коментарий',
                'verbose_name_plural': 'Коментарии',
                'db_table': 'app_comments',
            },
        ),
        migrations.CreateModel(
            name='ActivationKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activation_key', models.TextField(unique=True)),
                ('is_2step_verification', models.BooleanField(default=False)),
                ('is_email_change', models.BooleanField(default=False)),
                ('is_registration', models.BooleanField(default=False)),
                ('is_remember', models.BooleanField(default=False)),
                ('new_email', models.CharField(blank=True, max_length=254, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Активационный ключ',
                'verbose_name_plural': 'Активационные ключи',
                'db_table': 'app_activation_keys',
            },
        ),
        migrations.CreateModel(
            name='RatedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Records')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Проголосовавший пользователь',
                'verbose_name_plural': 'Проголосовавшие пользователи',
                'db_table': 'app_rated_users',
                'unique_together': {('user', 'record')},
            },
        ),
        migrations.CreateModel(
            name='ProvidedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Records')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Обеспеченный пользователь',
                'verbose_name_plural': 'Обеспеченные пользователи',
                'db_table': 'app_provided_users',
                'unique_together': {('user', 'record')},
            },
        ),
    ]
